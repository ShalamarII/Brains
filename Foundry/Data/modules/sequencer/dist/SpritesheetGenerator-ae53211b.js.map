{"version":3,"file":"SpritesheetGenerator-ae53211b.js","sources":["../src/lib/spritesheets/SpritesheetGenerator.js"],"sourcesContent":["/** @import { CompressedSpritesheet, SpritesheetMessageFromWorker } from './decodeWorker' */\nimport DecodeWorker from \"./decodeWorker.js?worker\";\nconst BASIS_TO_PIXI_FORMAT = {\n\tASTC: PIXI.INTERNAL_FORMATS.COMPRESSED_RGBA_ASTC_4x4_KHR,\n\tBC7: PIXI.INTERNAL_FORMATS.COMPRESSED_RGBA_BPTC_UNORM_EXT,\n\tBC3: PIXI.INTERNAL_FORMATS.COMPRESSED_RGBA_S3TC_DXT5_EXT,\n};\n\nexport class SpritesheetGenerator {\n\t/** @type {Record<string, Worker>} */\n\t#workers = {};\n\t/** @type {WorkerId[]} */\n\t#freeWorkers = [];\n\t/** @type {Map<JobId, (message: SpritesheetMessageFromWorker) => void>} */\n\t#jobMessageCallbacks = new Map();\n\t/** @type {WorkerId[]} */\n\t#workerFreeCallbacks = [];\n\n\t/**\n\t * @static\n\t * @return {SpritesheetGenerator | undefined}\n\t */\n\tstatic create() {\n\t\tif (!window.isSecureContext) {\n\t\t\tconsole.warn(\n\t\t\t\t\"Cannot initialize Spritesheet Generator. Secure Context Required. Serve Foundry VTT over a https connection to enable Spritesheet Generator\"\n\t\t\t);\n\t\t\treturn undefined;\n\t\t}\n\t\tif (VideoDecoder == null || typeof VideoDecoder !== \"function\") {\n\t\t\tconsole.warn(\n\t\t\t\t\"Cannot initialize Spritesheet Generator. Required VideoDecoder API is not implemented by your browser. All current version of Firefox, Chrome, Edge and Safari support this API. Please make sure your browser is up to date.\"\n\t\t\t);\n\t\t\treturn undefined;\n\t\t}\n\t\treturn new SpritesheetGenerator();\n\t}\n\n\tconstructor() {\n\t\tconst workerCount = Math.max(Math.floor((navigator.hardwareConcurrency - 2) / 2), 1);\n\t\tfor (let i = 0; i < workerCount; i++) {\n\t\t\tconst workerId = String(i);\n\t\t\tconst worker = new DecodeWorker();\n\t\t\tthis.#workers[workerId] = worker;\n\t\t\tthis.#freeWorkers.push(workerId);\n\t\t\tworker.onmessage = this.#getMessageHandler(workerId);\n\t\t}\n\t}\n\t/**\n\t * @param {string} id\n\t * @returns {(message: MessageEvent<SpritesheetMessageFromWorker>) => void}\n\t */\n\t#getMessageHandler(id) {\n\t\treturn (message) => {\n\t\t\t// remove the handler after message is received. There's only ever one of two\n\t\t\t// messages. Eithere success or error data\n\t\t\tconst jobId = message.data.id;\n\t\t\tconst callback = this.#jobMessageCallbacks.get(jobId);\n\t\t\tthis.#jobMessageCallbacks.delete(jobId);\n\t\t\tcallback?.(message.data);\n\t\t\tthis.#markWorkerFree(id);\n\t\t};\n\t}\n\t/**\n\t * @param {string} id\n\t * @returns {void}\n\t */\n\t#markWorkerFree(id) {\n\t\tconst firstCallback = this.#workerFreeCallbacks.shift();\n\t\tif (firstCallback) {\n\t\t\tfirstCallback?.(id);\n\t\t} else {\n\t\t\tthis.#freeWorkers.push(id);\n\t\t}\n\t}\n\t/**\n\t * @returns {Promise<Worker>}\n\t */\n\tasync #getWorker() {\n\t\tlet workerId = this.#freeWorkers.pop();\n\t\tif (!workerId) {\n\t\t\tworkerId = await new Promise((resolve) => {\n\t\t\t\tconst workerFreeCallback = (id) => {\n\t\t\t\t\tresolve(id);\n\t\t\t\t};\n\t\t\t\tthis.#workerFreeCallbacks.push(workerFreeCallback);\n\t\t\t});\n\t\t}\n\t\tthis.#freeWorkers = this.#freeWorkers.filter((id) => id !== workerId);\n\t\treturn this.#workers[workerId];\n\t}\n\t/**\n\t * @param {string} id\n\t * @param {ArrayBuffer} buffer\n\t * @param {number} minimumScale\n\t * @returns {Promise<SpritesheetMessageFromWorker>}\n\t */\n\tasync #postJob(id, buffer, minimumScale) {\n\t\tlet worker = await this.#getWorker();\n\t\tconst finishedPromise = new Promise((resolve) => {\n\t\t\tthis.#jobMessageCallbacks.set(id, (message) => resolve(message));\n\t\t});\n\t\tworker.postMessage(\n\t\t\t{ id, type: \"CreateSpritesheet\", payload: { buffer, minimumScale } },\n\t\t\t{\n\t\t\t\ttransfer: [buffer.buffer ?? buffer],\n\t\t\t}\n\t\t);\n\t\treturn finishedPromise;\n\t}\n\t/**\n\t * @param {string} url\n\t * @param {number} minimumScale\n\t * @returns {Promise<PIXI.Spritesheet>}\n\t */\n\tasync spritesheetFromUrl(url, minimumScale) {\n\t\tconst response = await fetch(url);\n\t\tconst buffer = await response.arrayBuffer();\n\t\treturn this.spritesheetFromBuffer({ buffer, id: url, minimumScale });\n\t}\n\t/**\n\t * @param {{ buffer: ArrayBuffer; id: string, minimumScale: number }}\n\t * @returns {Promise<PIXI.Spritesheet>}\n\t */\n\tasync spritesheetFromBuffer({ buffer, id, minimumScale }) {\n\t\tconst result = await this.#postJob(id, buffer, minimumScale);\n\t\tif (result.type === \"Cancel\") {\n\t\t\tthrow result.payload.message;\n\t\t}\n\t\treturn this.#createSpritesheet({ id, sheet: result.payload.sheet });\n\t}\n\t/**\n\t * @param {{ id: string; sheet: CompressedSpritesheet }}\n\t * @returns {Promise<PIXI.Spritesheet>}\n\t */\n\tasync #createSpritesheet({ id, sheet }) {\n\t\tconst firstLevel = sheet.levelData[0];\n\t\tconst resource = new PIXI.CompressedTextureResource(null, {\n\t\t\tformat: BASIS_TO_PIXI_FORMAT[sheet.format],\n\t\t\twidth: firstLevel.width,\n\t\t\theight: firstLevel.height,\n\t\t\tlevels: sheet.levelData.length,\n\t\t\tlevelBuffers: sheet.levelData.map((level, idx) => ({\n\t\t\t\tlevelID: idx,\n\t\t\t\tlevelWidth: level.width,\n\t\t\t\tlevelHeight: level.height,\n\t\t\t\tlevelBuffer: level.data,\n\t\t\t})),\n\t\t});\n\t\tconst texture = new PIXI.BaseTexture(resource, {\n\t\t\talphaMode: PIXI.ALPHA_MODES.PREMULTIPLIED_ALPHA,\n\t\t\tmipmap: PIXI.MIPMAP_MODES.ON_MANUAL,\n\t\t\tscaleMode: PIXI.SCALE_MODES.LINEAR,\n\t\t\twidth: firstLevel.width,\n\t\t\theight: firstLevel.height,\n\t\t\twrapMode: PIXI.WRAP_MODES.CLAMP,\n\t\t\tformat: PIXI.FORMATS.RGBA,\n\t\t\ttype: PIXI.TYPES.UNSIGNED_INT,\n\t\t\ttarget: PIXI.TARGETS.TEXTURE_2D,\n\t\t\tpixiIdPrefix: id,\n\t\t});\n\t\tconst numberPadding = Math.floor(Math.log10(sheet.sprites.length)) + 1;\n\t\tconst frames = Object.fromEntries(\n\t\t\tsheet.sprites.map((sprite, idx) => [\n\t\t\t\t`frame-${String(idx).padStart(numberPadding, \"0\")}`,\n\t\t\t\t{\n\t\t\t\t\tframe: sprite.frame,\n\t\t\t\t\trotated: sprite.rotated,\n\t\t\t\t\ttrimmed: sprite.trimmed,\n\t\t\t\t\tspriteSourceSize: sprite.spriteSourceSize,\n\t\t\t\t\tsourceSize: sprite.sourceSize,\n\t\t\t\t},\n\t\t\t])\n\t\t);\n\t\tconst spritesheetJson = {\n\t\t\tframes: frames,\n\t\t\tanimations: { [id]: sheet.sprites.map((_, idx) => `frame-${String(idx).padStart(numberPadding, \"0\")}`) },\n\t\t\tmeta: {\n\t\t\t\tapp: \"https://fantasycomputer.works/FoundryVTT-Sequencer\",\n\t\t\t\tversion: `INSERTVERSION`,\n\t\t\t\timage: id,\n\t\t\t\tformat: sheet.format,\n\t\t\t\tsize: { w: firstLevel.width, h: firstLevel.height },\n\t\t\t\tscale: \"1\",\n\t\t\t\t// @ts-expect-error additional info never hurt nobody\n\t\t\t\tframeRate: sheet.fps,\n\t\t\t},\n\t\t};\n\t\tconst spritesheet = new PIXI.Spritesheet({\n\t\t\ttexture,\n\t\t\tdata: spritesheetJson,\n\t\t\tcachePrefix: id,\n\t\t});\n\t\tawait spritesheet.parse();\n\t\treturn { spritesheet, scale: sheet.scale };\n\t}\n}\n/** @typedef {string} JobId */\n/** @typedef {string} WorkerId */\n"],"names":["DecodeWorker"],"mappings":"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"}